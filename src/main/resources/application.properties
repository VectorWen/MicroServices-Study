#调试模式 - 本身应用还不会输出debug 日志
debug=true
#logging.file=my.log
#logging.path=/Users/vector.huang/tmp
#TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF 设置本省应用日程输出级别
logging.level.com=DEBUG
#在Spring Boot中可以通过在application.properties配置如下参数控制输出格式：
#logging.pattern.console：定义输出到控制台的样式（不支持JDK Logger）
#logging.pattern.file：定义输出到文件的样式（不支持JDK Logger）
#logging.pattern.console=%d{yyyy-MM-dd-HH-mm}[%t][%c][%p]-%m%n

#多彩输出
#NEVER：禁用ANSI-colored输出（默认项）
#DETECT：会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）
#ALWAYS：总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用
spring.output.ansi.enabled=detect

# Spring Boot 是以 iso-8859 的编码方式读取 application.properties 配置文件，中文会乱码
home.name=T
home.userId=9
home.userName=黄廉温
home.avatar=http://www.baidu.com


# 键值对 user.name=xxx ,这里会读取不到对应写的属性值。为什么呢？
# Spring Boot 的默认 StandardEnvironment 首先将会加载 “systemEnvironment” 作为首个PropertySource.
# 而 source 即为System.getProperties().当 getProperty时,按照读取顺序,
# 返回 “systemEnvironment” 的值.即 System.getProperty(“user.name“)
user.name=我是中国人
user.randomName=${random.value}


# 多环节配置或者运行的时候配置java -jar -Dspring.profiles.active=prod xxx.jar
# java -jar xxx.jar --server.port=8888，通过使用–server.port属性来设置xxx.jar应用的端口为8888
# 屏蔽命令行访问属性的设置，只需要这句设置就能屏蔽：SpringApplication.setAddCommandLineProperties(false)
spring.profiles.active=prod


# 数据源
# 使用Druid 数据源，这里只是写了最简答的方式，Druid 最佳配置到Druid查找
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/WineLoversDB?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver




